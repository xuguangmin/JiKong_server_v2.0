---- devi_proto_data Matches (72 in 5 files) ----
CMakeLists.txt (protocol_adapter):ADD_LIBRARY(protocol_adapter STATIC  protocol_adapter.c devi_proto_data.c telnet_info.c)
Device_interface.c (device_interface):	struct DEVI_PROTO_DATA  devi_proto_data;
Device_interface.c (device_interface):	devi_init_proto_data_struct(&devi_proto_data);
Device_interface.c (device_interface):	devi_proto_data.data1  = serial_no;
Device_interface.c (device_interface):	devi_proto_data.data2  = iRate;
Device_interface.c (device_interface):	devi_proto_data.data3  = dataBit;
Device_interface.c (device_interface):	devi_proto_data.data4  = parity;
Device_interface.c (device_interface):	devi_proto_data.data5  = stopBit;
Device_interface.c (device_interface):	return send_devi_proto_data(DEVI_PCS_SERIAL, 0x01, &devi_proto_data) ? DEVI_TRUE:DEVI_FALSE;
Device_interface.c (device_interface):	struct DEVI_PROTO_DATA  devi_proto_data;
Device_interface.c (device_interface):	devi_init_proto_data_struct(&devi_proto_data);
Device_interface.c (device_interface):	devi_proto_data.data1  = serial_no;
Device_interface.c (device_interface):	return send_devi_proto_data(DEVI_PCS_SERIAL, 0x02, &devi_proto_data) ? DEVI_TRUE:DEVI_FALSE;
Device_interface.c (device_interface):	struct DEVI_PROTO_DATA  devi_proto_data;
Device_interface.c (device_interface):	devi_init_proto_data_struct(&devi_proto_data);
Device_interface.c (device_interface):	devi_proto_data.data1        = serial_no;
Device_interface.c (device_interface):	devi_proto_data.uchar_buffer = pcData;
Device_interface.c (device_interface):	devi_proto_data.data_len     = iLen;
Device_interface.c (device_interface):	return send_devi_proto_data(DEVI_PCS_SERIAL, 0x03, &devi_proto_data) ? DEVI_TRUE:DEVI_FALSE;
Device_interface.c (device_interface):	struct DEVI_PROTO_DATA  devi_proto_data;
Device_interface.c (device_interface):	devi_init_proto_data_struct(&devi_proto_data);
Device_interface.c (device_interface):	devi_proto_data.data1  = infrared_no;
Device_interface.c (device_interface):	devi_proto_data.data2  = key;
Device_interface.c (device_interface):	return send_devi_proto_data(DEVI_PCS_INFRARED, 0x01, &devi_proto_data) ? DEVI_TRUE:DEVI_FALSE;
Device_interface.c (device_interface):	struct DEVI_PROTO_DATA  devi_proto_data;
Device_interface.c (device_interface):	devi_init_proto_data_struct(&devi_proto_data);
Device_interface.c (device_interface):	devi_proto_data.char_buffer  = mac_addr;
Device_interface.c (device_interface):	devi_proto_data.uchar_buffer = password;
Device_interface.c (device_interface):	devi_proto_data.data_len     = password_len;
Device_interface.c (device_interface):	return send_devi_proto_data(DEVI_PCS_WOL, 0x01, &devi_proto_data) ? DEVI_TRUE:DEVI_FALSE;
Device_interface.c (device_interface):	struct DEVI_PROTO_DATA  devi_proto_data;
Device_interface.c (device_interface):	devi_init_proto_data_struct(&devi_proto_data);
Device_interface.c (device_interface):	devi_proto_data.data1  = relay_no;
Device_interface.c (device_interface):	devi_proto_data.data2  = b_status;
Device_interface.c (device_interface):	return send_devi_proto_data(DEVI_PCS_RELAY, 0x01, &devi_proto_data) ? DEVI_TRUE:DEVI_FALSE;
Device_interface.c (device_interface):	struct DEVI_PROTO_DATA  devi_proto_data;
Device_interface.c (device_interface):	devi_init_proto_data_struct(&devi_proto_data);
Device_interface.c (device_interface):	devi_proto_data.data1  = ctrlId;
Device_interface.c (device_interface):	devi_proto_data.data2  = property;
Device_interface.c (device_interface):	devi_proto_data.data3  = value;
Device_interface.c (device_interface):	return send_devi_proto_data(DEVI_PCS_CTRL_PROPERTY, 0x01, &devi_proto_data);
Device_interface.c (device_interface):	struct DEVI_PROTO_DATA  devi_proto_data;
Device_interface.c (device_interface):	devi_init_proto_data_struct(&devi_proto_data);
Device_interface.c (device_interface):	devi_proto_data.char_buffer = url_http;
Device_interface.c (device_interface):	return send_devi_proto_data(DEVI_PCS_HTTP, 0x01, &devi_proto_data) ? DEVI_TRUE:DEVI_FALSE;
Device_interface.c (device_interface):	struct DEVI_PROTO_DATA  devi_proto_data;
Device_interface.c (device_interface):	devi_init_proto_data_struct(&devi_proto_data);
Device_interface.c (device_interface):	devi_proto_data.char_buffer = uri;
Device_interface.c (device_interface):	devi_proto_data.uchar_buffer = (unsigned char *)body;
Device_interface.c (device_interface):	return send_devi_proto_data(DEVI_PCS_ONVIF, 0x01, &devi_proto_data) ? DEVI_TRUE:DEVI_FALSE;
Device_interface.c (device_interface):	struct DEVI_PROTO_DATA  devi_proto_data;
Device_interface.c (device_interface):	devi_init_proto_data_struct(&devi_proto_data);
Device_interface.c (device_interface):	devi_proto_data.data1       = controlId;
Device_interface.c (device_interface):	devi_proto_data.data2       = port;
Device_interface.c (device_interface):	devi_proto_data.char_buffer = ip_address;
Device_interface.c (device_interface):	return send_devi_proto_data(DEVI_PCS_TELNET, 0x01, &devi_proto_data) ? DEVI_TRUE:DEVI_FALSE;
Device_interface.c (device_interface):	struct DEVI_PROTO_DATA  devi_proto_data;
Device_interface.c (device_interface):	devi_init_proto_data_struct(&devi_proto_data);
Device_interface.c (device_interface):	devi_proto_data.data1       = controlId;
Device_interface.c (device_interface):	return send_devi_proto_data(DEVI_PCS_TELNET, 0x02, &devi_proto_data) ? DEVI_TRUE:DEVI_FALSE;
Device_interface.c (device_interface):	struct DEVI_PROTO_DATA  devi_proto_data;
Device_interface.c (device_interface):	devi_init_proto_data_struct(&devi_proto_data);
Device_interface.c (device_interface):	devi_proto_data.data1        = controlId;
Device_interface.c (device_interface):	devi_proto_data.uchar_buffer = data;
Device_interface.c (device_interface):	devi_proto_data.data_len     = data_len;
Device_interface.c (device_interface):	return send_devi_proto_data(DEVI_PCS_TELNET, 0x03, &devi_proto_data) ? DEVI_TRUE:DEVI_FALSE;
Devi_proto_data.c (protocol_adapter):  ÎÄ¼þÃû³Æ : devi_proto_data.c
Devi_proto_data.c (protocol_adapter):int devi_proto_data(int cmd, int cmd_ex, struct DEVI_PROTO_DATA *lp_devi_proto_data)
Devi_proto_data.h (protocol_adapter): * devi_proto_data.h
Devi_proto_data.h (protocol_adapter):extern int devi_proto_data(int cmd, int cmd_ex, struct DEVI_PROTO_DATA *lp_devi_proto_data);
Protocol_adapter.c (protocol_adapter):#include "devi_proto_data.h"
Protocol_adapter.c (protocol_adapter):	return devi_proto_data(cmd, cmd_ex, lp_devi_proto_data);
